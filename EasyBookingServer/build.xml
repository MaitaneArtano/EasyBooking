<?xml version="1.0" encoding="UTF-8" standalone="no"?>
	<project name="EasyBookingServer" default="run" basedir=".">
	    <!-- project directories -->
		<property environment="env"/>
		<property name="src.dir" location="src"/>
		<property name="build.dir" location="bin"/>
		<property name="dist.dir" location="dist"/>
		<property name="export.file" value="EasyBooking.jar"/>	
		<property name="lib.dir" location="lib"/>
		<property name="resources.dir" location="resources"/>
		<property name="server.port" value="1099"/> 
		<property name="server.IP" value="127.0.0.1"/> 
		<property name="server.Name" value="EasyBooking"/>
		<property name="policy.file" location="security/java.policy"/>
		
	    <!-- Classpath -->
	    <path id="full.classpath">
	        <fileset dir="${lib.dir}">
	            <include name="**/*.jar"/>
	        </fileset>
	        <pathelement location="${build.dir}"/>
	        <pathelement location="${resources.dir}"/>
	    </path>
		
		<target name="help">
					<echo>Usage: ant [build | export | server | run | runServer]</echo>
			</target>

	    <!-- TARGET : clean -->
	    <target name="clean">
	        <delete includeEmptyDirs="true" quiet="true">
	            <fileset dir="${build.dir}" includes="**/*.*"/>
	        </delete>
			<delete dir="${build.dir}"/>
	    </target>
		
		<!-- TARGET : build -->
		<target name="build" description="Builds the project">
				<delete dir="${build.dir}"/>
				<mkdir dir="${build.dir}"/>
				<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="full.classpath" deprecation="true" fork="true" includeantruntime="false"/>
		</target>
		
		<!-- TARGET : server -->
		<target name="server" depends="build" description="Runs Server program">
				<java classname="Server.Main" classpathref="full.classpath" fork="true">
		        	<jvmarg value="-Djava.rmi.server.codebase=file:${build.dir}/"/>
					<jvmarg value="-Djava.security.policy=${policy.file}"/>			
		        	<arg value="${server.IP}"/> 
			 		<arg value="${server.port}"/> 
					<arg value="${server.Name}"/>
		        </java>
		 </target>

	    <!-- TARGET : export -->
		<target name="export" depends="build" description="Export the project into a .jar file">
				<delete dir="${dist.dir}"/>
				<mkdir dir="${dist.dir}"/>
				<jar destfile="${dist.dir}/${export.file}" basedir="${build.dir}" includes="**/Remote/I**.class, **/DTO/**.class" />
		</target>	


	    <!-- TARGET : prepare -->
	    <target name="prepare">
	        <mkdir dir="${build.dir}"/>
	    </target>

	    <!-- TARGET : compile -->
	    <target name="compile" depends="clean, prepare">
	        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="full.classpath" includeantruntime="no">
	            <include name="**/*.java"/>
	        </javac>
	    </target>	

	    <!-- TARGET : enhance -->
	    <target name="enhance" depends="compile">
	    	<taskdef name="enhancer" classpathref="full.classpath" classname="org.datanucleus.enhancer.EnhancerTask" />
	    	
	   		<enhancer classpathref="full.classpath" failonerror="true">
	            <sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
	            <fileset dir="${build.dir}">
	                <include name="**/*.class"/>
	            </fileset>
	   		</enhancer>
	    </target>
		
	    <!-- TARGET : SchemaTool "create" -->
	    <target name="createschema" depends="enhance">
	        <taskdef name="schematool" classpathref="full.classpath" classname="org.datanucleus.store.schema.SchemaToolTask"/>

	        <schematool mode="create" classpathref="full.classpath" failonerror="true" props="datanucleus.properties">
	            <sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
	            <fileset dir="${build.dir}">
	                <include name="**/*.class"/>
	            </fileset>
	        </schematool>
	    </target>

	    <!-- TARGET : SchemaTool "delete" -->
	    <target name="deleteschema">
	        <taskdef name="schematool" classpathref="full.classpath" classname="org.datanucleus.store.schema.SchemaToolTask"/>

	    	<schematool mode="delete" classpathref="full.classpath" failonerror="true" props="datanucleus.properties">
	    		<sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
	        	<fileset dir="${build.dir}">
	                <include name="**/*.class"/>
	            </fileset>
	        </schematool>
	    </target>
		
		
		 <!-- SchemaTool "dbinfo" -->
			    <target name="schemainfo">
			    	<taskdef name="schematool" classpathref="classpath" classname="org.datanucleus.store.schema.SchemaToolTask"/>
			    	
			        <schematool mode="dbinfo" classpathref="classpath" failonerror="true" props="datanucleus.properties">
			        	 <sysproperty key="log4j.configuration" value="file:${resources.dir}/log4j.properties"/>
			        	<fileset dir="${build.dir}">
			                <include name="**/*.class"/>
			            </fileset>
		       
			        </schematool>
			    </target>
		
	    <!-- TARGET : Run -->	
		<target name="run" depends="createschema">
	        <java classname="Server.Main" classpathref="full.classpath" fork="true">
	        	<jvmarg value="-Dlog4j.configuration=log4j.properties"/>
			</java>
	    </target>
	</project>


	